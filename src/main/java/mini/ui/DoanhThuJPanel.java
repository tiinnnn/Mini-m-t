/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mini.ui;

import java.util.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import mini.dao.DoanhThuDAO;
import mini.dao.DoanhThuDAOImpl;
import mini.entity.DoanhThu;
import mini.util.TimeRange;
import mini.util.XDate;

/**
 *
 * @author LENOVO
 */
public class DoanhThuJPanel extends javax.swing.JPanel implements DoanhThuController{

    /**
     * Creates new form DoanhThuJPanel
     */
    public DoanhThuJPanel() {
        initComponents();
        this.open();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboTimeRanges = new javax.swing.JComboBox<>();
        txtBegin = new javax.swing.JTextField();
        txtEnd = new javax.swing.JTextField();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblByCategory = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblByUser = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnFilter = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        cboTimeRanges.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cboTimeRanges.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hôm nay", "Tuần này", "Tháng này", "Quý này", "Năm nay" }));
        cboTimeRanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTimeRangesActionPerformed(evt);
            }
        });

        tabs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabsStateChanged(evt);
            }
        });

        tblByCategory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Loại", "Doanh thu", "Số lượng", "Giá thấp nhất", "Giá cao nhất", "Giá TB", "Lợi nhuận"
            }
        ));
        jScrollPane1.setViewportView(tblByCategory);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
        );

        tabs.addTab("Doanh thu từng loại", jPanel1);

        tblByUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nhân viên", "Doanh thu", "Số lượng", "Bill đầu tiên", "Bill cuối cùng"
            }
        ));
        jScrollPane2.setViewportView(tblByUser);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
        );

        tabs.addTab("Doanh thu từng nhân viên", jPanel2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Từ ngày:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Đến ngày:");

        btnFilter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnFilter.setText("Lọc");
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBegin, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFilter)
                        .addGap(18, 18, 18)
                        .addComponent(cboTimeRanges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 787, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBegin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFilter)
                    .addComponent(cboTimeRanges, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(199, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboTimeRangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTimeRangesActionPerformed
        this.selectTimeRange();
    }//GEN-LAST:event_cboTimeRangesActionPerformed

    private void tabsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabsStateChanged
        this.fillRevenue();
    }//GEN-LAST:event_tabsStateChanged

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        this.fillRevenue();
    }//GEN-LAST:event_btnFilterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFilter;
    private javax.swing.JComboBox<String> cboTimeRanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblByCategory;
    private javax.swing.JTable tblByUser;
    private javax.swing.JTextField txtBegin;
    private javax.swing.JTextField txtEnd;
    // End of variables declaration//GEN-END:variables
    DoanhThuDAO dao = new DoanhThuDAOImpl();
    @Override
    public void open() {
        this.selectTimeRange(); 
    }

    @Override
    public void selectTimeRange() {
        TimeRange range = TimeRange.today(); 
            switch (cboTimeRanges.getSelectedIndex()) { 
            case 0 -> range = TimeRange.today(); 
            case 1 -> range = TimeRange.thisWeek(); 
            case 2 -> range = TimeRange.thisMonth(); 
            case 3 -> range = TimeRange.thisQuarter(); 
            case 4 -> range = TimeRange.thisYear(); 
        } 
        txtBegin.setText(XDate.format(range.getBegin(), "MM/dd/yyyy")); 
        txtEnd.setText(XDate.format(range.getEnd(), "MM/dd/yyyy")); 
        //this.fillRevenue();
    }

   @Override
    public void fillRevenue() {
        Date begin = XDate.parse(txtBegin.getText(), "MM/dd/yyyy"); 
        Date end = XDate.parse(txtEnd.getText(), "MM/dd/yyyy"); 
        switch(tabs.getSelectedIndex()){ 
            case 0 -> this.fillRevenueByCategory(begin, end); 
            case 1 -> this.fillRevenueByUser(begin, end); 
        }  
    }
    private void fillRevenueByCategory(Date begin, Date end) { 
        List<DoanhThu.ByLoai> items = dao.getByCategory(begin, end); 

        DefaultTableModel model = (DefaultTableModel) tblByCategory.getModel(); 
        model.setRowCount(0); 

        for (DoanhThu.ByLoai item : items) {
            Object[] row = { 
                item.getMaLoai(), 
                String.format("%.2f VNĐ", item.getDoanhThu()), 
                item.getSoLuong(), 
                String.format("%.2f VNĐ", item.getMinPrice()), 
                String.format("%.2f VNĐ", item.getMaxPrice()), 
                String.format("%.2f VNĐ", item.getAvgPrice()),
                String.format("%.2f VNĐ", item.getProfit())
            }; 
            model.addRow(row); 
        }
    }

    private void fillRevenueByUser(Date begin, Date end) { 
        List<DoanhThu.ByNV> items = dao.getByUser(begin, end); 
        DefaultTableModel model = (DefaultTableModel) tblByUser.getModel(); 
        model.setRowCount(0); 

        for (DoanhThu.ByNV item : items) {
            Object[] row = { 
                item.getMaNV(), 
                String.format("%.2f VNĐ", item.getDoanhThu()), 
                item.getSoLuong(), 
                XDate.format(item.getFirstTime(), "HH:mm:ss dd-MM-yyyy"), 
                XDate.format(item.getLastTime(), "HH:mm:ss dd-MM-yyyy") 
            }; 
            model.addRow(row); 
        }
    }
}
